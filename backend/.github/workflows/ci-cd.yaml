name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
    - name: Run Tests
      run: go test ./...  # Tests all .go files

  build:
    runs-on: ubuntu-latest
    needs: test  # Run after tests pass
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
    - name: Build Services
      run: |
        go build ./cmd/user-service/main.go
        go build ./cmd/ticket-service/main.go
        go build ./cmd/ai-service/main.go
        go build ./cmd/notification-service/main.go

  docker-build:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build Docker Images
      run: docker-compose --file docker/docker-compose.yml up --build -d  # Builds images

  deploy-minikube:
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'  # Only deploy on main push
    steps:
    - uses: actions/checkout@v4
    - name: Set up Minikube
      uses: medyagh/setup-minikube@latest
    - name: Load Docker Images to Minikube
      run: |
        minikube image load docker-user-service:latest
        minikube image load docker-ticket-service:latest
        minikube image load docker-ai-service:latest
        minikube image load docker-notification-service:latest
    - name: Deploy to Minikube


    env:  # New: Use secrets here
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        EMAIL_RECEIVER: ${{ secrets.EMAIL_RECEIVER }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}



        run: kubectl apply -f k8s/